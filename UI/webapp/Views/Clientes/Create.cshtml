@model RM.Aula.Application.ViewModels.ClienteEnderecoViewModel
@{
    ViewBag.Title = "Create";
}
<!-- MAIN CONTENT -->
<div id="content">

    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-pencil-square-o fa-fw "></i> Forms <span>
                    >
                    Wizards
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            <ul id="sparks" class="">
                <li class="sparks-info">
                    <h5> My Income <span class="txt-color-blue">$47,171</span></h5>
                    <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
                        1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
                    <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Orders <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
                    <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-sm-12 col-md-12 col-lg-12">


                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false" data-widget-deletebutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-check"></i> </span>
                        <h2>Cadastro Cliente </h2>

                    </header>

                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">
                            <div class="row">

                                @*<form asp-controller="Account" asp-action="Register" method="post" id="signupform" role="form"></form>*@

                                @using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post, new { @id = "wizard-1" }))
                                {                      
                                

                                @*<form id="wizard-1" novalidate="novalidate">*@
                                    <div id="bootstrap-wizard-1" class="col-sm-12">
                                        <div class="form-bootstrapWizard">
                                            <ul class="bootstrapWizard form-wizard">
                                                <li class="active" data-target="#step1">
                                                    <a href="#tab1" data-toggle="tab"> <span class="step">1</span> <span class="title">Informação básica</span> </a>
                                                </li>
                                                <li data-target="#step2">
                                                    <a href="#tab2" data-toggle="tab"> <span class="step">2</span> <span class="title">Endereço</span> </a>
                                                </li>
                                                <li data-target="#step3">
                                                    <a href="#tab3" data-toggle="tab"> <span class="step">3</span> <span class="title">Contato</span> </a>
                                                </li>
                                                <li data-target="#step4">
                                                    <a href="#tab4" data-toggle="tab"> <span class="step">4</span> <span class="title">Salvar</span> </a>
                                                </li>
                                            </ul>
                                            <div class="clearfix"></div>
                                        </div>

                                        <div class="tab-content">
                                            @using (Html.BeginForm())
                                            {
                                                @Html.AntiForgeryToken()

                                                <div class="tab-pane active" id="tab1">
                                                    <br>
                                                    <h3><strong>Cadastro</strong> - Informação básica</h3>

                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-user fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Cliente.Nome, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Cliente.Nome) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Cliente.Nome, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-user fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Cliente.Sobrenome, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Cliente.Sobrenome) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Cliente.Sobrenome, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-user fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Cliente.CPF, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Cliente.CPF) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Cliente.CPF, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-user fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Cliente.DataNascimento, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = "Data Nascimento" } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Cliente.DataNascimento, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="tab-pane" id="tab2">
                                                    <br>
                                                    <h3><strong>Cadastro</strong> - Endereço</h3>

                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-envelope fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Endereco.Logradouro, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Endereco.Logradouro) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Endereco.Logradouro, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-envelope fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Endereco.Bairro) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Endereco.Bairro, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-envelope fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Endereco.CEP, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Endereco.CEP) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Endereco.CEP, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    @*<div class="row">
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-flag fa-lg fa-fw"></i></span>
                                                                    @Html.DropDownList("country", (IEnumerable<SelectListItem>)ViewBag.ListaPaises, "Selecione o país", new { @class = "form-control input-lg" })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Endereco.Pais, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-map-marker fa-lg fa-fw"></i></span>
                                                                    @Html.DropDownList("State", new SelectList(string.Empty, "Value", "Text"), "Selecione o estado", new { @class = "form-control input-lg" })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Endereco.Estado, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-map-marker fa-lg fa-fw"></i></span>
                                                                    @Html.DropDownList("City", new SelectList(string.Empty, "Value", "Text"), "Selecione a cidade", new { @class = "form-control input-lg" })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Endereco.Cidade, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                    </div>*@
                                                </div>

                                                <div class="tab-pane" id="tab3">
                                                    <br>
                                                    <h3><strong>Cadastro</strong> - Contatos</h3>

                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-envelope fa-lg fa-fw"></i></span>
                                                                    @Html.EditorFor(model => model.Cliente.Email, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Cliente.Email) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Cliente.Email, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-phone fa-lg fa-fw"></i></span>
                                                                    @*<input class="form-control input-lg" data-mask="+99 (999) 999-9999" data-mask-placeholder="X" placeholder="+1" type="text" name="wphone" id="wphone">*@
                                                                    @Html.EditorFor(model => model.Cliente.Telefone, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Cliente.Telefone) } })
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Cliente.Telefone, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <div class="form-group">
                                                                <div class="input-group">
                                                                    <span class="input-group-addon"><i class="fa fa-mobile fa-lg fa-fw"></i></span>
                                                                    @*<input class="form-control input-lg" data-mask="(99) 999-9999" data-mask-placeholder="X" placeholder="+01" type="text" name="hphone" id="hphone">*@
                                                                    @Html.EditorFor(model => model.Cliente.Celular, new { htmlAttributes = new { @class = "form-control input-lg", placeholder = Html.DisplayNameFor(n => n.Cliente.Celular) } })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="tab-pane" id="tab4">
                                                    <br>
                                                    <h3><strong>Step 4</strong> - Save Form</h3>
                                                    <br>
                                                    <h1 class="text-center text-success"><strong><i class="fa fa-check fa-lg"></i> Complete</strong></h1>
                                                    <h4 class="text-center">Click next to finish</h4>
                                                    <div class="form-group">
                                                        <div class="col-md-offset-2 col-md-10">
                                                            <input type="submit" value="Create" class="btn btn-default" />
                                                        </div>
                                                    </div>
                                                    <br>
                                                    <br>
                                                </div>
                                            }

                                            <div class="form-actions">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <ul class="pager wizard no-margin">
                                                            <!--<li class="previous first disabled">
                                                            <a href="javascript:void(0);" class="btn btn-lg btn-default"> First </a>
                                                            </li>-->
                                                            <li class="previous disabled">
                                                                <a href="javascript:void(0);" class="btn btn-lg btn-default"> Previous </a>
                                                            </li>
                                                            <!--<li class="next last">
                                                            <a href="javascript:void(0);" class="btn btn-lg btn-primary"> Last </a>
                                                            </li>-->
                                                            <li class="next">
                                                                <a href="javascript:void(0);" class="btn btn-lg txt-color-darken"> Next </a>

                                                            </li>
                                                        </ul>

                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                @*</form>*@

                                }

                            </div>

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->


        </div>

        <!-- end row -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <!-- PAGE RELATED PLUGIN(S) -->
    <script src="/scripts/plugin/bootstrap-wizard/jquery.bootstrap.wizard.min.js"></script>
    <script src="/scripts/plugin/fuelux/wizard/wizard.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            $("#country").change(function () {
                $("#State").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getstate")',
                dataType: 'json',
                data: { id: $("#country").val() },
                success: function (states) {
                    $.each(states, function (i, state) {
                        $("#State").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Falha ao recuperar estados do país.' + ex);
                }
            });
            return false;
        })
    });

 $(document).ready(function () {
     $("#State").change(function () {
            $("#City").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getcity")',
                dataType: 'json',
                data: { id: $("#State").val() },
                success: function (states) {
                    $.each(states, function (i, state) {
                        $("#City").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Falha ao recuperar cidades do estado.' + ex);
                }
            });
            return false;
        })
 });
    </script>

    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            //Bootstrap Wizard Validations

            var $validator = $("#wizard-1").validate({

                rules: {
                    email: {
                        required: true,
                        email: "Your email address must be in the format of name@domain.com"
                    },
                    fname: {
                        required: true
                    },
                    lname: {
                        required: true
                    },
                    country: {
                        required: true
                    },
                    city: {
                        required: true
                    },
                    postal: {
                        required: true,
                        minlength: 4
                    },
                    wphone: {
                        required: true,
                        minlength: 10
                    },
                    hphone: {
                        required: true,
                        minlength: 10
                    }
                },

                messages: {
                    fname: "Please specify your First name",
                    lname: "Please specify your Last name",
                    email: {
                        required: "We need your email address to contact you",
                        email: "Your email address must be in the format of name@domain.com"
                    }
                },

                highlight: function (element) {
                    $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
                },
                errorElement: 'span',
                errorClass: 'help-block',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

            $('#bootstrap-wizard-1').bootstrapWizard({
                'tabClass': 'form-wizard',
                'onNext': function (tab, navigation, index) {
                    var $valid = $("#wizard-1").valid();
                    if (!$valid) {
                        $validator.focusInvalid();
                        return false;
                    } else {
                        $('#bootstrap-wizard-1').find('.form-wizard').children('li').eq(index - 1).addClass(
                            'complete');
                        $('#bootstrap-wizard-1').find('.form-wizard').children('li').eq(index - 1).find('.step')
                            .html('<i class="fa fa-check"></i>');
                    }
                }
            });


            // fuelux wizard
            var wizard = $('.wizard').wizard();

            wizard.on('finished', function (e, data) {
                //$("#fuelux-wizard").submit();
                //console.log("submitted!");
                $.smallBox({
                    title: "Congratulations! Your form was submitted",
                    content: "<i class='fa fa-clock-o'></i> <i>1 seconds ago...</i>",
                    color: "#5F895F",
                    iconSmall: "fa fa-check bounce animated",
                    timeout: 4000
                });

            });


        })

    </script>
}





@*<h2>Create</h2>

    @using (Html.BeginForm())
                {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ClienteViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
